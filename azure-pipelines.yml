name: SendGrid

trigger:
  - master

resources:
  repositories:
  - repository: cnp-azuredevops-libraries
    type: github
    ref: refs/heads/master
    name: hmcts/cnp-azuredevops-libraries
    endpoint: 'hmcts'

pool:
  vmImage: 'ubuntu-latest'

parameters:
  - name: action
    displayName: Action
    type: string
    default: 'plan'
    values:
    - plan
    - apply

  - name: environment
    displayName: Environments
    type: object
    default:
    values:
    - nonprod
    - prod

  - name: location
    displayName: Location
    type: string
    default: 'UK South'
    values:
    - 'UK South'

  - name: overrideAction
    type: string
    default: plan
    values:
      - plan
      - apply
      - destroy

variables:
  - name: timeoutInMinutes
    value: 60
  - name: agentPool
    value: "ubuntu-latest"
  - name: project
    value: "sendgrid"
  - name: terraformInitSubscription
    value: "04d27a32-7a07-48b3-95b8-3c8691e1a263"
  - name: action
    value: ${{ parameters.action }}
  - template: vars/input-variables.yaml@cnp-azuredevops-libraries

stages:
  - stage: Precheck
    jobs:
      - job:
        pool:
          vmImage: ${{ variables.agentPool }}
        timeoutInMinutes: ${{ variables.timeoutInMinutes }}
        steps:
          - template: steps/terraform-precheck.yaml@cnp-azuredevops-libraries
            parameters:
              keyvaultName: 'infra-vault-nonprod'
              keyvaultSecret: 'azure-devops-token'
              serviceConnection: 'DCD-CFT-Sandbox'
              overrideAction: ${{ parameters.overrideAction }}

  - ${{ each environment in parameters.environment }}:
    - stage: ${{ environment }}
      jobs:
        - job: PlanAndApply
          steps:     
          - template: steps/terraform.yaml@cnp-azuredevops-libraries
            parameters:
              serviceConnection: "dts-management-${{ environment }}-intsvc"
              product: ${{ variables.project }}
              overrideAction: ${{ parameters.overrideAction }}
              environment: ${{ environment }}
              component: "sendgrid"
              terraformInitSubscription: ${{ variables.terraformInitSubscription }}
              tfVarsFile: NULL
              initCommandOptions: >
                 -reconfigure
              planCommandOptions: >
                -compact-warnings
                -lock-timeout=30s
        
          - task: TerraformInstaller@0
            displayName: Terraform install
            inputs:
              terraformVersion: ${{ variables.terraformVersion }}