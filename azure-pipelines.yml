name: SendGrid
trigger:
  batch: true
  branches:
    include:
      - master

resources:
  repositories:
  - repository: cnp-azuredevops-libraries
    type: github
    ref: refs/heads/master
    name: hmcts/cnp-azuredevops-libraries
    endpoint: 'hmcts'

pool:
  vmImage: 'ubuntu-latest'

parameters:
  - name: action
    displayName: Action
    type: string
    default: plan
    values:
      - plan
      - apply

  - name: environment
    displayName: Environments
    type: object
    default:
      - nonprod
      - prod

  - name: location
    displayName: Location
    type: string
    default: "UK South"
    values:
      - "UK South"

  - name: overrideAction
    type: string
    default: plan
    values:
      - plan
      - apply
      - destroy

variables:
  - name: timeoutInMinutes
    value: 60
  - name: agentPool
    value: "ubuntu-latest"
  - name: project
    value: "sendgrid"
  - name: product
    value: "sendgrid"
  - name: terraformInitSubscription
    value: "04d27a32-7a07-48b3-95b8-3c8691e1a263"
  - name: action
    value: ${{ parameters.action }}
  - name: backendAzureRmResourceGroupName
    ${{ if eq( parameters['environment'], 'nonprod') }}:
      value: 'azure-control-stg-rg'
  - name: terraformSubscriptionID
    ${{ if eq( parameters['environment'], 'nonprod') }}:
      value: "1c4f0704-a29e-403d-b719-b90c34ef14c9"
    ${{ if eq( parameters['environment'], 'prod') }}:
      value: "8999dec3-0104-4a27-94ee-6588559729d1"
  - template: vars/input-variables.yaml@cnp-azuredevops-libraries

stages:
  - stage: Precheck
    jobs:
      - job:
        pool:
          vmImage: ${{ variables.agentPool }}
        timeoutInMinutes: ${{ variables.timeoutInMinutes }}
        steps:
          - template: steps/terraform-precheck.yaml@cnp-azuredevops-libraries
            parameters:
              keyvaultName: 'infra-vault-nonprod'
              keyvaultSecret: 'azure-devops-token'
              serviceConnection: 'DCD-CFT-Sandbox'
              overrideAction: ${{ parameters.overrideAction }}

  - ${{ each environment in parameters.environment }}:
    - stage: ${{ environment }}
      jobs:
        - job: PlanAndApply
          steps:     
          - template: steps/terraform.yaml@cnp-azuredevops-libraries
            parameters:
              location: ${{ parameters.location }}
              serviceConnection: "DTS-MANAGEMENT-${{ environment }}-INTSVC"
              product: ${{ variables.product }}
              overrideAction: ${{ parameters.overrideAction }}
              ${{ if eq(parameters['environment'], 'nonprod') }}:
                environment: "stg"
              ${{ else }}:
                environment: ${{ environment }}
              component: "sendgrid"
              terraformInitSubscription: ${{ variables.terraformInitSubscription }}
              tfVarsFile: NULL
              initCommandOptions: >
                -reconfigure
                -var subscription_id=${{ variables.terraformSubscriptionID }}
                -backend-config=resource_group_name=${{ variables.backendAzureRmResourceGroupName }}
              planCommandOptions: >
                -var subscription_id=${{ variables.terraformSubscriptionID }}
                -var env=${{ environment }}
                -compact-warnings
                -lock-timeout=30s
