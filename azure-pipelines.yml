name: ${{ parameters.action }} - ${{ parameters.env }}.${{ parameters.location }}

trigger:
  - master

resources:
  repositories:
  - repository: cnp-azuredevops-libraries
    type: github
    ref: refs/heads/master
    name: hmcts/cnp-azuredevops-libraries
    endpoint: 'hmcts'

pool:
  vmImage: 'ubuntu-latest'

parameters:
  - name: action
    displayName: Action
    type: string
    default: 'plan'
    values:
    - plan
    - apply

  - name: env
    displayName: sendgridEnvironment
    type: object
    default: 'nonprod'
    values:
    - nonprod
    - prod

  - name: location
    displayName: Location
    type: string
    default: 'UK South'
    values:
    - 'UK South'

variables:
  - name: timeoutInMinutes
    value: 60
  - name: agentPool
    value: ubuntu-20.04 
  - name: project
    value: ss
  - name: serviceConnection
    value: OPS-APPROVAL-GATE-${{ parameters.env }}-ENVS
  - name: tfInitSub
    value: "04d27a32-7a07-48b3-95b8-3c8691e1a263"
   # - name: product
    #  value: "sds-platform"
  - name: action
    value: ${{ parameters.action }}
  - template: vars/input-variables.yaml@cnp-azuredevops-libraries

stages:

  - stage: Precheck
    jobs:
    - job:
      pool:
        vmImage: ${{ variables.agentPool }}
        timeoutInMinutes: ${{ variables.timeoutInMinutes }}
      steps:
        - template: steps/terraform-precheck.yaml@cnp-azuredevops-libraries
          parameters:
            keyvaultName: 'sendgridnonprod'
            keyvaultSecret: 'sendgrid-nonprod-password'
            serviceConnection: 'DCD-CNP-DEV'
            overrideAction: ${{ parameters.action }}
  
  - ${{ each environment in parameters.env }}:
    - stage: ${{ environment }}
      jobs:
        - job: PlanAndApply
          steps:     
          - template: steps/terraform.yaml@cnp-azuredevops-libraries
            parameters:
              serviceConnection: dts-management-${{ environment }}-intsvc
              product: $(product)
              overrideAction: ${{ parameters.overrideAction }}
              environment: ${{ deployment.environment }}
              component: "sendgrid"
              terraformInitSubscription: ${{ variables.terraformInitSubscription }}
              tfVarsFile: NULL
              initCommandOptions: >
                 -reconfigure
                 -backend-config resource_group_name=${{ deployment.resourceGroupName }}
              planCommandOptions: >
                -compact-warnings
                -lock-timeout=30s
        
          - task: TerraformInstaller@0
            displayName: Terraform install
            inputs:
              terraformVersion: ${{ variables.terraformVersion }}